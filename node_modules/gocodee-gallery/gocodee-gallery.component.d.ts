import { OnInit, DoCheck, ElementRef, AfterViewInit, EventEmitter } from '@angular/core';
import { SafeResourceUrl } from '@angular/platform-browser';
import { GocodeeGalleryPreviewComponent } from './gocodee-gallery-preview.component';
import { GocodeeGalleryImageComponent } from './gocodee-gallery-image.component';
import { GocodeeGalleryThumbnailsComponent } from './gocodee-gallery-thumbnails.component';
import { GocodeeGalleryOptions } from './gocodee-gallery-options.model';
import { GocodeeGalleryImage } from './gocodee-gallery-image.model';
import { GocodeeGalleryOrderedImage } from './gocodee-gallery-ordered-image.model';
export declare class GocodeeGalleryComponent implements OnInit, DoCheck, AfterViewInit {
    private myElement;
    options: GocodeeGalleryOptions[];
    images: GocodeeGalleryImage[];
    imagesReady: EventEmitter<{}>;
    change: EventEmitter<{
        index: number;
        image: GocodeeGalleryImage;
    }>;
    previewOpen: EventEmitter<{}>;
    previewClose: EventEmitter<{}>;
    previewChange: EventEmitter<{
        index: number;
        image: GocodeeGalleryImage;
    }>;
    smallImages: string[] | SafeResourceUrl[];
    mediumImages: GocodeeGalleryOrderedImage[];
    bigImages: string[] | SafeResourceUrl[];
    descriptions: string[];
    links: string[];
    labels: string[];
    oldImages: GocodeeGalleryImage[];
    oldImagesLength: number;
    selectedIndex: number;
    previewEnabled: boolean;
    currentOptions: GocodeeGalleryOptions;
    private breakpoint;
    private prevBreakpoint;
    private fullWidthTimeout;
    preview: GocodeeGalleryPreviewComponent;
    image: GocodeeGalleryImageComponent;
    thubmnails: GocodeeGalleryThumbnailsComponent;
    width: string;
    height: string;
    left: string;
    constructor(myElement: ElementRef);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngAfterViewInit(): void;
    onResize(): void;
    getImageHeight(): string;
    getThumbnailsHeight(): string;
    getThumbnailsMarginTop(): string;
    getThumbnailsMarginBottom(): string;
    openPreview(index: number): void;
    onPreviewOpen(): void;
    onPreviewClose(): void;
    selectFromImage(index: number): void;
    selectFromThumbnails(index: number): void;
    show(index: number): void;
    showNext(): void;
    showPrev(): void;
    canShowNext(): boolean;
    canShowPrev(): boolean;
    previewSelect(index: number): void;
    moveThumbnailsRight(): void;
    moveThumbnailsLeft(): void;
    canMoveThumbnailsRight(): void;
    canMoveThumbnailsLeft(): void;
    private resetThumbnails();
    private select(index);
    private checkFullWidth();
    private setImages();
    private setBreakpoint();
    private sortOptions();
    private setOptions();
    private combineOptions(first, second);
}
